{"version":3,"sources":["images/zutan.svg","SignIn.tsx","AppBar.tsx","SearchResult.tsx","mockData.js","WordSearch.tsx","MyZutan.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","SignInDiv","styled","div","_templateObject","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firebaseUIConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","console","log","firebaseUI","reset","uiShown","setState","firebaseUIShown","credentialHelper","firebaseui","CredentialHelper","NONE","signInOptions","firebase","EmailAuthProvider","PROVIDER_ID","state","AuthUI","react_default","a","createElement","className","startFirebaseUI","stopFirebaseUI","start","Component","AppToolbar","Toolbar","AppBar_templateObject","AppBar","AppBar_default","position","IconButton_default","color","onClick","onClickMyZutan","PhotoLibrary_default","onClickHome","Home_default","ResultDiv","SearchResult_templateObject","MoreResultsDiv","_templateObject2","ResultImg","img","_templateObject3","ACard","Card","_templateObject4","SearchResult","cols","imageURLs","width","GridList_default","cellHeight","spacing","map","url","i","GridListTile_default","key","raised","onImageClicked","CardContent_default","src","length","Fab_default","variant","onMoreResultsClicked","KeyboardArrowDown_default","withWidth","mockSearchResult","fpath","process","mockMyZutanObjects","word","imageURL","obj","LogoImg","WordSearch_templateObject","MockVersionDiv","WordSearch_templateObject2","ProgressDiv","WordSearch_templateObject3","SearchForm","form","WordSearch_templateObject4","SearchTextField","TextField","_templateObject5","SearchButton","Button","_templateObject6","ImageDialog","Dialog","_templateObject7","SelectedImg","_templateObject8","AddButton","_templateObject9","ImageURL","query","fullsize","thumbnail","WordSearch","queryText","isSearching","iSelectedImageURL","textField","React","createRef","onTextInputChanged","bind","assertThisInitialized","onSubmit","onAddButtonClicked","onDialogClosed","isMock","thumbnailURLs","selectedImgSrc","src_AppBar","zutanIcon","alt","autoFocus","inputRef","type","value","onChange","CircularProgress_default","disableShrink","src_SearchResult","open","onClose","Add_default","style","marginLeft","e","_this2","preventDefault","current","blur","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","addMockResult","startImageSearch","stop","iImageURLs","zutanObject","addToMockObjects","addToFirestore","evt","target","iImages","history","push","user","currentUser","collection","doc","uid","add","fetch","response","json","urls","items","item","link","image","thumbnailLink","concat","MyZutanDiv","MyZutan_templateObject","MyZutan_templateObject2","MyZutan_templateObject3","WordImg","MyZutan_templateObject4","ASearchIcon","SearchIcon","MyZutan_templateObject5","ADeleteIcon","DeleteIcon","MyZutan_templateObject6","AGridList","GridList","MyZutan_templateObject7","MyZutan","zutanObjects","isZutanObjectsReady","anchorEl","onMenuClosed","onShowMenuClicked","onWeblioClicked","loadZutanMockObjects","loadZutanObjects","words","word2urls","forEach","hasOwnProperty","sort","bShow","Boolean","MyZutan_ACard","CardHeader_default","avatar","Avatar_default","aria-label","toUpperCase","cardAvatar","action","MoreVert_default","MenuList_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","ListItemIcon_default","ListItemText_default","primary","cardAction","title","MyZutan_ProgressDiv","_this3","get","then","snapshot","objs","data","currentTarget","window","AppDiv","App_templateObject","App","isSignedIn","signInNeeded","generateClassName","createGenerateClassName","dangerouslyUseGlobalCSS","jss","create","objectSpread","jssPreset","insertionPoint","document","getElementById","AppMain","BrowserRouter","basename","Route","exact","path","render","_ref","src_WordSearch","_ref2","src_MyZutan","JssProvider_default","src_SignIn","addFirebaseAuthListener","onAuthStateChanged","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.4ae052cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zutan.e200f990.svg\";","// SignIn.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport * as firebase from 'firebase';\nimport * as firebaseui from 'firebaseui';\nimport 'firebaseui/dist/firebaseui.css';\n\nconst SignInDiv = styled.div`\n  margin-top: 20px;\n`;\n\n// SignIn\ninterface SignInState {\n  firebaseUIShown: boolean;\n}\nclass SignIn extends Component<any, SignInState> {\n\n  // firebaseUI:\n  private firebaseUI: firebaseui.auth.AuthUI;\n\n  // firebaseUIConfig\n  firebaseUIConfig = {\n    callbacks: {\n      signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n        console.log('signInSuccessWithAuthResult:', authResult);\n        this.firebaseUI.reset();\n        return false;\n      },\n      uiShown: () => {\n        this.setState({firebaseUIShown: true});\n      }\n    },\n    credentialHelper: firebaseui.auth.CredentialHelper.NONE,\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ]\n  };\n\n\n  // SignIn()\n  constructor(props) {\n    super(props);\n    this.state = {\n      firebaseUIShown: false\n    }\n    this.firebaseUI = new firebaseui.auth.AuthUI(firebase.auth());\n  }\n\n  // render()\n  render() {\n    const uiShown = this.state.firebaseUIShown;\n    return (\n      <SignInDiv>\n        <div className=\"firebaseui-auth-container\"></div>\n        {!uiShown && <div>Loading...</div>}\n      </SignInDiv>\n    );\n  }\n\n  // componentDidMount()\n  componentDidMount() {\n    this.startFirebaseUI();\n  }\n\n  // componentWillUnmount()\n  componentWillUnmount() {\n    this.stopFirebaseUI();\n  }\n\n  // startFirebaseUI()\n  startFirebaseUI() {\n    this.firebaseUI.start(\n      '.firebaseui-auth-container',\n      this.firebaseUIConfig);\n  }\n\n  // stopFirebaseUI()\n  stopFirebaseUI() {\n    this.firebaseUI.reset();\n  }\n}\n\nexport default SignIn;\n","// AppBar.tsx\n\nimport React from 'react';\nimport styled from 'styled-components'\nimport MUIAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\n\n// AppToolbar\nconst AppToolbar = styled(Toolbar)`\n  display: flex;\n  justify-content: flex-end;\n` as any;\n\n// AppBar\nconst AppBar = (props) => (\n  <MUIAppBar position=\"static\">\n    <AppToolbar>\n      <IconButton\n        color=\"inherit\"\n        onClick={props.onClickMyZutan}>\n        <PhotoLibraryIcon />\n      </IconButton>\n      <IconButton color=\"inherit\"\n        onClick={props.onClickHome}>\n        <HomeIcon />\n      </IconButton>\n    </AppToolbar>\n  </MUIAppBar>\n);\n\nexport default AppBar;\n","// SearchResult.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\nimport withWidth from '@material-ui/core/withWidth';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\n// ResultDiv\nconst ResultDiv = styled.div`\n  margin: 10px;\n`;\n// MoreResultsDiv\nconst MoreResultsDiv = styled.div`\n  margin: 10px auto;\n  display: flex;\n  justify-content: center;\n`;\n// ResultImg\nconst ResultImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n`;\n// ACard\nconst ACard = styled(Card)`\n  margin: 10px;\n` as any;\n\n// SearchResultProps\ninterface SearchResultProps {\n  width: string;\n  imageURLs: string[];\n  onImageClicked: (iImages: number) => void;\n  onMoreResultsClicked: () => void;\n}\n\n// SearchResult\nclass SearchResult extends Component<SearchResultProps> {\n\n  // render()\n  render() {\n    const imageURLs = this.props.imageURLs;\n    const width = this.props.width;\n    let cols;\n    switch (width) {\n      case 'xs':\n        cols = 2;\n        break;\n      case 'sm':\n        cols = 4;\n        break;\n      default:\n        cols = 5;\n        break;\n    }\n    //\n    return (\n      <ResultDiv>\n        <GridList cols={cols} cellHeight=\"auto\" spacing={16}> { imageURLs.map((url, i) =>\n          <GridListTile key={url}>\n            <ACard raised onClick={() => this.props.onImageClicked(i)}>\n              <CardContent>\n                <ResultImg src={url} />\n              </CardContent>\n            </ACard>\n          </GridListTile>)}\n        </GridList> { (0 < this.props.imageURLs.length) && \n        <MoreResultsDiv>\n          <Fab\n            variant=\"extended\"\n            onClick={this.props.onMoreResultsClicked}>\n            <KeyboardArrowDownIcon />\n            More Results\n          </Fab>\n        </MoreResultsDiv> }\n      </ResultDiv>\n    );\n  }\n}\n\nexport default withWidth()(SearchResult);\n","// mockData.js\n\n// mockSearchResult:\nconst mockSearchResult = [\n  '/mockdata/apple01.jpg',\n  '/mockdata/apple02.jpg',\n  '/mockdata/apple03.jpg',\n  '/mockdata/apple04.jpg',\n  '/mockdata/apple05.jpg',\n  '/mockdata/apple06.jpg',\n  '/mockdata/apple07.jpg',\n  '/mockdata/apple08.jpg',\n  '/mockdata/apple09.jpg',\n  '/mockdata/apple10.jpg'\n].map(fpath => process.env.PUBLIC_URL + fpath);\n\n// mockMyZutanObjects\nlet mockMyZutanObjects = [\n  {\n    word: 'doggy',\n    imageURL: '/mockdata/doggy01.jpg'\n  },\n  {\n    word: 'doggy',\n    imageURL: '/mockdata/doggy02.jpg'\n  },\n  {\n    word: '面条',\n    imageURL: '/mockdata/noodle01.jpg'\n  },\n  {\n    word: '面条',\n    imageURL: '/mockdata/noodle02.jpg'\n  },\n  {\n    word: '군중',\n    imageURL: '/mockdata/crowd01.jpg'\n  },\n  {\n    word: '군중',\n    imageURL: '/mockdata/crowd02.jpg'\n  }\n].map(obj => {\n  return {\n    word: obj.word,\n    imageURL: process.env.PUBLIC_URL + obj.imageURL\n  };\n});\n\nexport {\n  mockSearchResult,\n  mockMyZutanObjects\n}\n","// WordSearch.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as firebase from 'firebase';\n\nimport AppBar from './AppBar';\nimport SearchResult from './SearchResult';\nimport {GOOGLE_CUSTOM_SEARCH_API_KEY} from './config';\nimport {GOOGLE_CUSTOM_SEARCH_ENGINE_ID} from './config';\nimport zutanIcon from './images/zutan.svg';\nimport {mockSearchResult, mockMyZutanObjects} from './mockData';\n\n// LogoImg\nconst LogoImg = styled.img`\n  display: block;\n  width: 225px;\n  margin: 20px auto;\n`;\n// MockVersionDiv\nconst MockVersionDiv = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n// ProgressDiv\nconst ProgressDiv = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n`;\n// SearchForm\nconst SearchForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n// SearchTextField\nconst SearchTextField = styled(TextField)`\n  margin-left: auto;\n  margin-right: auto;\n` as any;\n// SearchButton\nconst SearchButton = styled(Button)`\n  margin-top: 20px;\n` as any;\nconst ImageDialog = styled(Dialog)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n` as any;\n// SelectedImg\nconst SelectedImg = styled.img`\n  width: 300px;\n  object-fit: contain;\n  margin: 20px;\n`;\n// AddButton\nconst AddButton = styled(Button)`\n  height: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n` as any;\n\n// ImageURL\nclass ImageURL {\n  // ImageURL\n  constructor(\n    public query: string,\n    public fullsize: string,\n    public thumbnail: string) {}\n}\n\n// WordSearch\ninterface WordSearchState {\n  queryText: string;\n  isSearching: boolean;\n  imageURLs: ImageURL[];\n  iSelectedImageURL: number | null;\n}\nclass WordSearch extends Component<any, WordSearchState> {\n\n  // textField\n  private textField: any;\n\n  // WordSearch\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryText: '',\n      isSearching: false,\n      imageURLs: [],\n      iSelectedImageURL: null\n    };\n    this.textField = React.createRef();\n    this.onTextInputChanged = this.onTextInputChanged.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onAddButtonClicked = this.onAddButtonClicked.bind(this);\n    this.onImageClicked = this.onImageClicked.bind(this);\n    this.onMoreResultsClicked = this.onMoreResultsClicked.bind(this);\n    this.onDialogClosed = this.onDialogClosed.bind(this);\n    this.onClickHome = this.onClickHome.bind(this);\n    this.onClickMyZutan = this.onClickMyZutan.bind(this);\n  }\n\n  // render()\n  render() {\n    const isMock = this.props.isMock;\n    const isSearching = this.state.isSearching;\n    const thumbnailURLs = this.state.imageURLs.map(\n      (url) => url.thumbnail\n    );\n    const selectedImgSrc = this.state.iSelectedImageURL === null ?\n        \"\" : this.state.imageURLs[this.state.iSelectedImageURL!].fullsize;\n    return (\n      <div>\n        <AppBar\n          onClickHome={this.onClickHome}\n          onClickMyZutan={this.onClickMyZutan} />\n        <LogoImg\n          src={zutanIcon}\n          alt=\"logo\">\n        </LogoImg>\n        <MockVersionDiv>\n          {isMock ? '--- Mock Version ---' : null}\n        </MockVersionDiv>\n        <SearchForm onSubmit={this.onSubmit}>\n          <SearchTextField\n            autoFocus={true}\n            inputRef={this.textField}\n            type=\"search\"\n            variant=\"outlined\"\n            value={this.state.queryText}\n            onChange={this.onTextInputChanged} />\n          <SearchButton\n            type=\"submit\"\n            variant=\"outlined\">\n            ZU\n          </SearchButton>\n        </SearchForm> { isSearching ?\n        <ProgressDiv>\n          <CircularProgress disableShrink />\n        </ProgressDiv> :\n        <SearchResult\n          imageURLs={thumbnailURLs}\n          onImageClicked={this.onImageClicked}\n          onMoreResultsClicked={this.onMoreResultsClicked} /> }\n        <ImageDialog\n          open={this.state.iSelectedImageURL !== null}\n          onClose={this.onDialogClosed}>\n            <SelectedImg src={selectedImgSrc} />\n            <AddButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.onAddButtonClicked}>\n              ADD TO MY ZUTAN\n              <AddIcon style={{marginLeft: '10px'}} />\n            </AddButton>\n        </ImageDialog>\n      </div>\n    );\n  }\n\n  // onSubmit()\n  onSubmit(e): void {\n    e.preventDefault();\n    this.textField.current.blur();\n    this.setState({\n      imageURLs: [],\n      isSearching: true\n    }, async () => {\n      if (this.props.isMock) {\n        this.addMockResult();\n      } else {\n        await this.startImageSearch(this.state.queryText);\n      }\n      this.setState({isSearching: false});\n    });\n  }\n\n  // onAddButtonClicked()\n  onAddButtonClicked(): void {\n    const iImageURLs = this.state.iSelectedImageURL;\n    if (iImageURLs === null) {\n      return;\n    }\n    const imageURL = this.state.imageURLs[iImageURLs];\n\t\tconst zutanObject = {\n\t\t\tword: imageURL.query,\n\t\t\timageURL: imageURL.fullsize\n\t\t};\n\t\tif (this.props.isMock) {\n\t\t\tthis.addToMockObjects(zutanObject);\n\t\t} else {\n\t\t\tthis.addToFirestore(zutanObject);\n\t\t}\n    this.setState({iSelectedImageURL: null});\n  }\n\n  // onTextInputChanged()\n  onTextInputChanged(evt) {\n    this.setState({queryText: evt.target.value});\n  }\n\n  // onImageClicked()\n  onImageClicked(iImages: number): void {\n    this.setState({iSelectedImageURL: iImages});\n  }\n\n  // onMoreResultsClicked()\n  onMoreResultsClicked(): void {\n    if (!this.props.isMock) {\n      this.startImageSearch(this.state.queryText);\n    }\n  }\n\n  // onDialogClosed()\n  onDialogClosed() {\n    this.setState({iSelectedImageURL: null});\n  }\n\n  // onClickHome()\n  onClickHome() {\n    this.setState({\n      queryText: '',\n      imageURLs: []\n    });\n    this.props.history.push('/');\n  }\n\n  // onClickMyZutan()\n  onClickMyZutan() {\n    this.props.history.push('/myzutan');\n  }\n\n\t// addToFirestore()\n\tprivate addToFirestore(zutanObject: any): void {\n    // TODO: props?\n    const user = firebase.auth().currentUser; \n    if (user !== null) {\n      // TODO: error handling. async?\n      const db = firebase.firestore();\n      db.collection('users').doc(user.uid)\n        .collection('zutan').add(zutanObject);\n    }\n\t}\n\n\t// addToMockObjects()\n\tprivate addToMockObjects(zutanObject: any): void {\n    mockMyZutanObjects.push({\n      word: zutanObject.word,\n      imageURL: zutanObject.imageURL\n    });\n\t}\n\n  // startImageSearch()\n  async startImageSearch(query) {\n    const imageURLs = this.state.imageURLs;\n    const url = 'https://www.googleapis.com/customsearch/v1' +\n      '?key=' + GOOGLE_CUSTOM_SEARCH_API_KEY + \n      '&cx=' + GOOGLE_CUSTOM_SEARCH_ENGINE_ID + \n      '&num=' + 10 +\n      '&start=' + (imageURLs.length + 1) +\n      '&searchType=image' +\n      '&q=' + query;\n    // console.log(url);\n    const response = await fetch(url);\n    const json = await response.json();\n    // console.log(json);\n    let urls: ImageURL[] = [];\n    for (let i = 0; i < json.items.length; i++) {\n      const item = json.items[i];\n      urls.push(new ImageURL(\n        query, item.link, item.image.thumbnailLink)\n      );\n    }\n    this.setState({\n      imageURLs: imageURLs.concat(urls)\n    });\n  }\n\n  // addMockResult()\n  private addMockResult() {\n    const query = 'apple';\n    // queryText: \n    this.setState({queryText: query});\n    // searchResult:\n    const imageURLs = mockSearchResult.map((fpath) => {\n      // thumbnail === fullsize\n      return new ImageURL(query, fpath, fpath);\n    });\n    this.setState({imageURLs: imageURLs});\n  }\n}\n\nexport default WordSearch;\n","// MyZutan.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\nimport withWidth from '@material-ui/core/withWidth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as firebase from 'firebase';\n\nimport {mockMyZutanObjects} from './mockData';\nimport AppBar from './AppBar';\n\n// MyZutanDiv\nconst MyZutanDiv = styled.div`\n  margin: 10px;\n`;\n// ProgressDiv\nconst ProgressDiv = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n`;\n// ACard\nconst ACard = styled(Card)`\n  margin: 15px;\n` as any;\n// WordImg\nconst WordImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  padding: 0 10px;\n  object-fit: contain;\n  object-position: 0 50%;\n`;\n// ASearchIcon\nconst ASearchIcon = styled(SearchIcon)`\n  position: absolute;\n  right: 5px;\n` as any;\n// ADeleteIcon\nconst ADeleteIcon = styled(DeleteIcon)`\n  position: absolute;\n  right: 5px;\n` as any;\n// AGridList\nconst AGridList = styled(GridList)`\n  flex-wrap: nowrap;\n` as any;\n\n// MyZutan\ninterface MyZutanState {\n  zutanObjects: any[];\n  anchorEl: HTMLElement | null;\n  isZutanObjectsReady: boolean;\n}\nclass MyZutan extends Component<any, MyZutanState> {\n\n  // MyZutan\n  constructor(props) {\n    super(props);\n    this.state = {\n      zutanObjects: [],\n      isZutanObjectsReady: false,\n      anchorEl: null\n    }\n    this.onMenuClosed = this.onMenuClosed.bind(this);\n    this.onShowMenuClicked = this.onShowMenuClicked.bind(this);\n    this.onWeblioClicked = this.onWeblioClicked.bind(this);\n    this.onClickHome = this.onClickHome.bind(this);\n    this.onClickMyZutan = this.onClickMyZutan.bind(this);\n  }\n\n  // componentDidMount()\n  componentDidMount() {\n    if (this.props.isMock) {\n      this.loadZutanMockObjects();\n    } else {\n      this.loadZutanObjects();\n    }\n  }\n\n  // render()\n  render() {\n    if (!this.state.isZutanObjectsReady) {\n      return (\n        <div>\n          <AppBar\n            onClickHome={this.onClickHome}\n            onClickMyZutan={this.onClickMyZutan} />\n          <ProgressDiv>\n            <CircularProgress disableShrink />\n          </ProgressDiv>\n        </div>\n      );\n    } else {\n      // words\n      let words: string[] = [];\n      let word2urls = {};\n      this.state.zutanObjects.forEach((obj) => {\n        if (word2urls.hasOwnProperty(obj.word)) {\n          word2urls[obj.word].push(obj.imageURL);\n        } else {\n          word2urls[obj.word] = [obj.imageURL];\n          words.push(obj.word);\n        }\n      })\n      words.sort();\n      const width = this.props.width;\n      let cols;\n      switch (width) {\n        case 'xs':\n          cols = 1;\n          break;\n        case 'sm':\n          cols = 2;\n          break;\n        default:\n          cols = 3;\n          break;\n      }\n      const {anchorEl} = this.state;\n      const bShow = Boolean(anchorEl);\n      const cardAvatar = (word) => (\n        <Avatar aria-label=\"Word\">\n          {word[0] && word[0].toUpperCase()}\n        </Avatar>\n      );\n      const cardAction = (word) => (\n        <div>\n          <IconButton\n            onClick={this.onShowMenuClicked}>\n            <MoreVertIcon />\n          </IconButton>\n          <MenuList>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={bShow}\n              onClose={this.onMenuClosed}\n            >\n              <MenuItem onClick={() => {\n                this.onWeblioClicked(word)\n              }}>\n                <ListItemIcon>\n                  <ASearchIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Weblio\" />\n              </MenuItem>\n              <MenuItem>\n                <ListItemIcon>\n                  <ADeleteIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Delete (TODO)\" />\n              </MenuItem>\n            </Menu>\n          </MenuList>\n        </div>\n      );\n      //\n      return (\n        <div>\n          <AppBar\n            onClickHome={this.onClickHome}\n            onClickMyZutan={this.onClickMyZutan} />\n          <MyZutanDiv>\n            <GridList cols={cols} cellHeight=\"auto\" spacing={16}> { words.map((word, i) =>\n              <GridListTile key={word}>\n                <ACard raised>\n                  <CardHeader\n                    avatar={cardAvatar(word)}\n                    action={cardAction(word)}\n                    title={word} />\n                  <CardContent>\n                    <AGridList cols={1.2}> {word2urls[word].map(url => (\n                      <GridListTile key={url}>\n                        <WordImg src={url} alt={word} />\n                      </GridListTile> ))}\n                    </AGridList>\n                  </CardContent>\n                </ACard>\n              </GridListTile> )}\n            </GridList>\n          </MyZutanDiv>\n        </div>\n      );\n    }\n  }\n\n  // loadZutanObjects()\n  private loadZutanObjects(): void {\n    // TODO: props?\n    const user = firebase.auth().currentUser; \n    if (user !== null) {\n      const zutan = firebase.firestore()\n        .collection('users').doc(user.uid)\n        .collection('zutan');\n      zutan.get().then((snapshot) => {\n        let objs: any[] = []\n        snapshot.forEach((doc) => {\n          let data = doc.data()\n          objs.push({\n            word: data.word,\n            imageURL: data.imageURL\n          });\n        })\n        this.setState({\n          zutanObjects: objs,\n          isZutanObjectsReady: true\n        });\n      });\n    }\n  }\n  \n  // loadZutanMockObjects()\n  private loadZutanMockObjects(): void {\n    this.setState({\n      zutanObjects: mockMyZutanObjects,\n      isZutanObjectsReady: true\n    });\n  }\n\n  // onClickHome()\n  private onClickHome() {\n    this.props.history.push('/');\n  }\n\n  // onClickMyZutan()\n  private onClickMyZutan() {\n    this.props.history.push('/myzutan');\n  }\n\n  // onMenuClosed()\n  private onMenuClosed(): void {\n    this.setState({ anchorEl: null });\n  }\n\n  // onShowMenuClicked()\n  // TODO: any -> MouseEvent<HTMLElement> ??\n  private onShowMenuClicked(evt: any): void {\n    this.setState({ anchorEl: evt.currentTarget });\n  }\n\n  // onWeblioClicked()\n  private onWeblioClicked(word: string): void {\n    window.open('https://ejje.weblio.jp/content/' + word);\n    this.onMenuClosed();\n  }\n}\n\nexport default withWidth()(MyZutan);\n","// App.tsx\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport {create} from 'jss';\nimport {createGenerateClassName, jssPreset} from '@material-ui/core/styles';\nimport styled from 'styled-components'\nimport * as firebase from 'firebase';\nimport SignIn from './SignIn';\nimport WordSearch from './WordSearch';\nimport MyZutan from './MyZutan';\n\n// AppDiv\nconst AppDiv = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\n// App\ninterface AppState {\n  isSignedIn: boolean;\n}\nclass App extends Component<any, AppState> {\n\n  // App()\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false\n    }\n  }\n\n  // render()\n  render() {\n    const isMock = this.props.isMock;\n    const signInNeeded = isMock ?  false : !this.state.isSignedIn;\n    // material-ui\n    const generateClassName = createGenerateClassName({\n      // XXX: Without this, the style of <Grid> in SearchResultRow \n      //      will break in production build.\n      // # cleaner fix needed\n      dangerouslyUseGlobalCSS: true\n    });\n    const jss = create({\n      ...jssPreset(),\n      insertionPoint: document.getElementById('jss-insertion-point')!\n    });\n    // AppMain\n    const AppMain = (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route exact path=\"/\" render={({history}) =>\n            <WordSearch\n              history={history}\n              isMock={isMock} />}\n          />\n          <Route path=\"/myzutan\" render={({history}) =>\n            <MyZutan\n              history={history}\n              isMock={isMock} />}\n          />\n        </div>\n      </Router>\n    );\n    return (\n      <JssProvider jss={jss} generateClassName={generateClassName}>\n        <AppDiv>\n          {signInNeeded ?  <SignIn /> : AppMain}\n        </AppDiv>\n      </JssProvider>\n    );\n  }\n\n  // componentDidMount()\n  componentDidMount() {\n    if (!this.props.isMock) {\n      this.addFirebaseAuthListener();\n    }\n  }\n\n  // addFirebaseAuthListener()\n  addFirebaseAuthListener() {\n    firebase.auth().onAuthStateChanged((user) => {\n      //console.log('onAuthStateChanged:', user);\n      if (user) {\n        this.setState({isSignedIn: true});\n      } else {\n        this.setState({isSignedIn: false});\n      }\n    });\n  }\n}\n\nexport default App;\n","// index.tsx\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as firebase from 'firebase';\nimport './index.css';\nimport App from './App';\nimport * as config from './config';\n\nconsole.log('process.env.REACT_APP_MOCK: ' + process.env.REACT_APP_MOCK);\nconsole.log('process.env.PUBLIC_URL: ' + process.env.PUBLIC_URL);\n\nlet isMock = false;\nif (process.env.REACT_APP_MOCK) {\n  isMock = true;\n} else {\n  require(\"firebase/firestore\");\n  const isValidConfig = (\n    config.GOOGLE_CUSTOM_SEARCH_API_KEY !== '' &&\n    config.GOOGLE_CUSTOM_SEARCH_ENGINE_ID !== '' &&\n    Object.keys(config.FIREBASE_CONFIG).filter(v => v === '').length === 0\n  );\n  if (isValidConfig) {\n    firebase.initializeApp(config.FIREBASE_CONFIG);\n    firebase.firestore().settings({\n      timestampsInSnapshots: true\n    });\n  } else {\n    console.error('\"config.js\" is not configured properly. ' +\n      ' Follow the zutan/README.');\n  }\n}\nReactDOM.render(<App isMock={isMock} />, document.getElementById('root'));\n"],"sourceRoot":""}