{"version":3,"sources":["images/zutan.svg","SignIn.tsx","AppBar.tsx","SearchResult.tsx","mockData.js","WordSearch.tsx","MyZutan.tsx","App.tsx","index.tsx","apikeys.tsx"],"names":["module","exports","__webpack_require__","p","SignInDiv","styled","div","_templateObject","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firebaseUIConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","console","log","firebaseUI","reset","uiShown","setState","firebaseUIShown","credentialHelper","firebaseui","CredentialHelper","NONE","signInOptions","firebase","EmailAuthProvider","PROVIDER_ID","state","AuthUI","react_default","a","createElement","className","startFirebaseUI","stopFirebaseUI","start","Component","AppToolbar","Toolbar","AppBar_templateObject","AppBar","AppBar_default","position","IconButton_default","color","onClick","onClickMyZutan","PhotoLibrary_default","onClickHome","Home_default","ResultDiv","SearchResult_templateObject","MoreResultsDiv","_templateObject2","ResultImg","img","_templateObject3","Card","MUICard","_templateObject4","SearchResult","cols","imageURLs","width","GridList_default","spacing","map","url","i","GridListTile_default","key","SearchResult_Card","raised","onImageClicked","CardContent_default","src","length","Fab_default","variant","onMoreResultsClicked","KeyboardArrowDown_default","withWidth","mockSearchResult","thumb","full","obj","process","mockMyZutanObjects","word","imageURL","LogoImg","WordSearch_templateObject","MockVersionDiv","WordSearch_templateObject2","ProgressDiv","WordSearch_templateObject3","SearchForm","form","WordSearch_templateObject4","SearchTextField","TextField","_templateObject5","SearchButton","Button","_templateObject6","ImageDialog","Dialog","_templateObject7","SelectedImg","_templateObject8","AddButton","_templateObject9","ImageURL","query","fullsize","thumbnail","WordSearch","queryText","isSearching","iSelectedImageURL","textField","React","createRef","onTextInputChanged","bind","assertThisInitialized","onSubmit","onAddButtonClicked","onDialogClosed","isMock","thumbnailURLs","selectedImgSrc","src_AppBar","zutanIcon","alt","autoFocus","inputRef","type","value","onChange","CircularProgress_default","disableShrink","src_SearchResult","open","onClose","Add_default","style","marginLeft","e","_this2","preventDefault","current","blur","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","addMockResult","startImageSearch","stop","iImageURLs","zutanObject","addToMockObjects","addToFirestore","evt","target","iImages","history","push","user","currentUser","collection","doc","uid","add","fetch","response","json","urls","items","item","link","image","thumbnailLink","concat","MyZutanDiv","MyZutan_templateObject","MyZutan_templateObject2","WordImg","MyZutan_templateObject3","ASearchIcon","SearchIcon","MyZutan_templateObject4","ADeleteIcon","DeleteIcon","MyZutan_templateObject5","AGridList","GridList","MyZutan_templateObject6","MyZutan","zutanObjects","isZutanObjectsReady","anchorEl","onMenuClosed","onShowMenuClicked","onWeblioClicked","loadZutanMockObjects","loadZutanObjects","words","word2urls","forEach","hasOwnProperty","sort","bShow","Boolean","cellHeight","Card_default","CardHeader_default","avatar","Avatar_default","aria-label","toUpperCase","action","MoreVert_default","MenuList_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","ListItemIcon_default","ListItemText_default","primary","title","MyZutan_ProgressDiv","_this3","get","then","snapshot","objs","data","currentTarget","window","AppDiv","App_templateObject","App","isSignedIn","signInNeeded","generateClassName","createGenerateClassName","dangerouslyUseGlobalCSS","jss","create","objectSpread","jssPreset","insertionPoint","document","getElementById","AppMain","BrowserRouter","basename","Route","exact","path","render","_ref","src_WordSearch","_ref2","src_MyZutan","JssProvider_default","src_SignIn","addFirebaseAuthListener","onAuthStateChanged","firebaseConfig","apiKey","authDomain","projectId","require","settings","timestampsInSnapshots","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.e65f403c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zutan.e200f990.svg\";","// SignIn.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport * as firebase from 'firebase';\nimport * as firebaseui from 'firebaseui';\nimport 'firebaseui/dist/firebaseui.css';\n\nconst SignInDiv = styled.div`\n  margin-top: 20px;\n`;\n\n// SignIn\ninterface SignInState {\n  firebaseUIShown: boolean;\n}\nclass SignIn extends Component<any, SignInState> {\n\n  // firebaseUI:\n  private firebaseUI: firebaseui.auth.AuthUI;\n\n  // firebaseUIConfig\n  firebaseUIConfig = {\n    callbacks: {\n      signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n        console.log('signInSuccessWithAuthResult:', authResult);\n        this.firebaseUI.reset();\n        return false;\n      },\n      uiShown: () => {\n        this.setState({firebaseUIShown: true});\n      }\n    },\n    credentialHelper: firebaseui.auth.CredentialHelper.NONE,\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ]\n  };\n\n\n  // SignIn()\n  constructor(props) {\n    super(props);\n    this.state = {\n      firebaseUIShown: false\n    }\n    this.firebaseUI = new firebaseui.auth.AuthUI(firebase.auth());\n  }\n\n  // render()\n  render() {\n    const uiShown = this.state.firebaseUIShown;\n    return (\n      <SignInDiv>\n        <div className=\"firebaseui-auth-container\"></div>\n        {!uiShown && <div>Loading...</div>}\n      </SignInDiv>\n    );\n  }\n\n  // componentDidMount()\n  componentDidMount() {\n    this.startFirebaseUI();\n  }\n\n  // componentWillUnmount()\n  componentWillUnmount() {\n    this.stopFirebaseUI();\n  }\n\n  // startFirebaseUI()\n  startFirebaseUI() {\n    this.firebaseUI.start(\n      '.firebaseui-auth-container',\n      this.firebaseUIConfig);\n  }\n\n  // stopFirebaseUI()\n  stopFirebaseUI() {\n    this.firebaseUI.reset();\n  }\n}\n\nexport default SignIn;\n","// AppBar.tsx\n\nimport React from 'react';\nimport styled from 'styled-components'\nimport MUIAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\n\n// AppToolbar\nconst AppToolbar = styled(Toolbar)`\n  display: flex;\n  justify-content: flex-end;\n` as any;\n\n// AppBar\nconst AppBar = (props) => (\n  <MUIAppBar position=\"static\">\n    <AppToolbar>\n      <IconButton\n        color=\"inherit\"\n        onClick={props.onClickMyZutan}>\n        <PhotoLibraryIcon />\n      </IconButton>\n      <IconButton color=\"inherit\"\n        onClick={props.onClickHome}>\n        <HomeIcon />\n      </IconButton>\n    </AppToolbar>\n  </MUIAppBar>\n);\n\nexport default AppBar;\n","// SearchResult.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\nimport withWidth from '@material-ui/core/withWidth';\nimport MUICard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\n// ResultDiv\nconst ResultDiv = styled.div`\n  margin: 10px;\n`;\n// MoreResultsDiv\nconst MoreResultsDiv = styled.div`\n  margin: 10px auto;\n  display: flex;\n  justify-content: center;\n`;\n// ResultImg\nconst ResultImg = styled.img`\n  object-fit: contain;\n  display: block;\n  margin: auto;\n`;\n// Card\nconst Card = styled(MUICard)`\n  margin: 10px;\n` as any;\n\n// SearchResultProps\ninterface SearchResultProps {\n  width: string;\n  imageURLs: string[];\n  onImageClicked: (iImages: number) => void;\n  onMoreResultsClicked: () => void;\n}\n\n// SearchResult\nclass SearchResult extends Component<SearchResultProps> {\n\n  // render()\n  render() {\n    const imageURLs = this.props.imageURLs;\n    const width = this.props.width;\n    let cols;\n    switch (width) {\n      case 'xs':\n        cols = 2;\n        break;\n      case 'sm':\n        cols = 4;\n        break;\n      default:\n        cols = 5;\n        break;\n    }\n    //\n    return (\n      <ResultDiv>\n        <GridList cols={cols} spacing={16}> { imageURLs.map((url, i) =>\n          <GridListTile key={url}>\n            <Card raised onClick={() => this.props.onImageClicked(i)}>\n              <CardContent>\n                <ResultImg src={url} />\n              </CardContent>\n            </Card>\n          </GridListTile>)}\n        </GridList> { (0 < this.props.imageURLs.length) && \n        <MoreResultsDiv>\n          <Fab\n            variant=\"extended\"\n            onClick={this.props.onMoreResultsClicked}>\n            <KeyboardArrowDownIcon />\n            More Results\n          </Fab>\n        </MoreResultsDiv> }\n      </ResultDiv>\n    );\n  }\n}\n\nexport default withWidth()(SearchResult);\n","// mockData.js\n\n// mockSearchResult:\nconst mockSearchResult = [\n  {\n    thumb: '/mockdata/apple0_thumb.jpg',\n    full: '/mockdata/apple0_full.jpg'\n  },\n  {\n    thumb: '/mockdata/apple1_thumb.png',\n    full: '/mockdata/apple1_full.png'\n  },\n  {\n    thumb: '/mockdata/apple2_thumb.png',\n    full: '/mockdata/apple2_full.jpg'\n  },\n  {\n    thumb: '/mockdata/apple3_thumb.jpg',\n    full: '/mockdata/apple3_full.jpg'\n  },\n  {\n    thumb: '/mockdata/apple4_thumb.png',\n    full: '/mockdata/apple4_full.png'\n  },\n  {\n    thumb: '/mockdata/apple5_thumb.png',\n    full: '/mockdata/apple5_full.jpg'\n  },\n  {\n    thumb: '/mockdata/apple6_thumb.png',\n    full: '/mockdata/apple6_full.png'\n  },\n  {\n    thumb: '/mockdata/apple7_thumb.png',\n    full: '/mockdata/apple7_full.png'\n  },\n  {\n    thumb: '/mockdata/apple8_thumb.png',\n    full: '/mockdata/apple8_full.jpg'\n  },\n  {\n    thumb: '/mockdata/apple9_thumb.png',\n    full: '/mockdata/apple9_full.png'\n  }\n].map(obj => {\n  return {\n    thumb: process.env.PUBLIC_URL + obj.thumb,\n    full: process.env.PUBLIC_URL + obj.full\n  };\n});\n\n// mockMyZutanObjects\nlet mockMyZutanObjects = [\n  {\n    word: 'rice',\n    imageURL: '/mockdata/rice0_full.jpg'\n  },\n  {\n    word: 'run',\n    imageURL: '/mockdata/run0_full.png'\n  },\n  {\n    word: 'doggy',\n    imageURL: '/mockdata/doggy0_full.jpg'\n  },\n  {\n    word: 'doggy',\n    imageURL: '/mockdata/doggy1_full.jpg'\n  }\n].map(obj => {\n  return {\n    word: obj.word,\n    imageURL: process.env.PUBLIC_URL + obj.imageURL\n  };\n});\n\nexport {\n  mockSearchResult,\n  mockMyZutanObjects\n}\n","// WordSearch.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as firebase from 'firebase';\n\nimport AppBar from './AppBar';\nimport SearchResult from './SearchResult';\nimport {GOOGLE_CUSTOM_SEARCH_API_KEY} from './apikeys';\nimport {GOOGLE_CUSTOM_SEARCH_ENGINE_ID} from './apikeys';\nimport zutanIcon from './images/zutan.svg';\nimport {mockSearchResult, mockMyZutanObjects} from './mockData';\n\n// LogoImg\nconst LogoImg = styled.img`\n  display: block;\n  width: 225px;\n  margin: 20px auto;\n`;\n// MockVersionDiv\nconst MockVersionDiv = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n// ProgressDiv\nconst ProgressDiv = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n`;\n// SearchForm\nconst SearchForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n// SearchTextField\nconst SearchTextField = styled(TextField)`\n  margin-left: auto;\n  margin-right: auto;\n` as any;\n// SearchButton\nconst SearchButton = styled(Button)`\n  margin-top: 20px;\n` as any;\nconst ImageDialog = styled(Dialog)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n` as any;\n// SelectedImg\nconst SelectedImg = styled.img`\n  width: 300px;\n  object-fit: contain;\n  margin: 20px;\n`;\n// AddButton\nconst AddButton = styled(Button)`\n  height: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n` as any;\n\n// ImageURL\nclass ImageURL {\n  // ImageURL\n  constructor(\n    public query: string,\n    public fullsize: string,\n    public thumbnail: string) {}\n}\n\n// WordSearch\ninterface WordSearchState {\n  queryText: string;\n  isSearching: boolean;\n  imageURLs: ImageURL[];\n  iSelectedImageURL: number | null;\n}\nclass WordSearch extends Component<any, WordSearchState> {\n\n  // textField\n  private textField: any;\n\n  // WordSearch\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryText: '',\n      isSearching: false,\n      imageURLs: [],\n      iSelectedImageURL: null\n    };\n    this.textField = React.createRef();\n    this.onTextInputChanged = this.onTextInputChanged.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onAddButtonClicked = this.onAddButtonClicked.bind(this);\n    this.onImageClicked = this.onImageClicked.bind(this);\n    this.onMoreResultsClicked = this.onMoreResultsClicked.bind(this);\n    this.onDialogClosed = this.onDialogClosed.bind(this);\n    this.onClickHome = this.onClickHome.bind(this);\n    this.onClickMyZutan = this.onClickMyZutan.bind(this);\n  }\n\n  // render()\n  render() {\n    const isMock = this.props.isMock;\n    const isSearching = this.state.isSearching;\n    const thumbnailURLs = this.state.imageURLs.map(\n      (url) => url.thumbnail\n    );\n    const selectedImgSrc = this.state.iSelectedImageURL === null ?\n        \"\" : this.state.imageURLs[this.state.iSelectedImageURL!].fullsize;\n    return (\n      <div>\n        <AppBar\n          onClickHome={this.onClickHome}\n          onClickMyZutan={this.onClickMyZutan} />\n        <LogoImg\n          src={zutanIcon}\n          alt=\"logo\">\n        </LogoImg>\n        <MockVersionDiv>\n          {isMock ? '--- Mock Version ---' : null}\n        </MockVersionDiv>\n        <SearchForm onSubmit={this.onSubmit}>\n          <SearchTextField\n            autoFocus={true}\n            inputRef={this.textField}\n            type=\"search\"\n            variant=\"outlined\"\n            value={this.state.queryText}\n            onChange={this.onTextInputChanged} />\n          <SearchButton\n            type=\"submit\"\n            variant=\"outlined\">\n            ZU\n          </SearchButton>\n        </SearchForm> { isSearching ?\n        <ProgressDiv>\n          <CircularProgress disableShrink />\n        </ProgressDiv> :\n        <SearchResult\n          imageURLs={thumbnailURLs}\n          onImageClicked={this.onImageClicked}\n          onMoreResultsClicked={this.onMoreResultsClicked} /> }\n        <ImageDialog\n          open={this.state.iSelectedImageURL !== null}\n          onClose={this.onDialogClosed}>\n            <SelectedImg src={selectedImgSrc} />\n            <AddButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.onAddButtonClicked}>\n              ADD TO MY ZUTAN\n              <AddIcon style={{marginLeft: '10px'}} />\n            </AddButton>\n        </ImageDialog>\n      </div>\n    );\n  }\n\n  // onSubmit()\n  onSubmit(e): void {\n    e.preventDefault();\n    this.textField.current.blur();\n    this.setState({\n      imageURLs: [],\n      isSearching: true\n    }, async () => {\n      if (this.props.isMock) {\n        this.addMockResult();\n      } else {\n        await this.startImageSearch(this.state.queryText);\n      }\n      this.setState({isSearching: false});\n    });\n  }\n\n  // onAddButtonClicked()\n  onAddButtonClicked(): void {\n    const iImageURLs = this.state.iSelectedImageURL;\n    if (iImageURLs === null) {\n      return;\n    }\n    const imageURL = this.state.imageURLs[iImageURLs];\n\t\tconst zutanObject = {\n\t\t\tword: imageURL.query,\n\t\t\timageURL: imageURL.fullsize\n\t\t};\n\t\tif (this.props.isMock) {\n\t\t\tthis.addToMockObjects(zutanObject);\n\t\t} else {\n\t\t\tthis.addToFirestore(zutanObject);\n\t\t}\n    this.setState({iSelectedImageURL: null});\n  }\n\n  // onTextInputChanged()\n  onTextInputChanged(evt) {\n    this.setState({queryText: evt.target.value});\n  }\n\n  // onImageClicked()\n  onImageClicked(iImages: number): void {\n    this.setState({iSelectedImageURL: iImages});\n  }\n\n  // onMoreResultsClicked()\n  onMoreResultsClicked(): void {\n    if (!this.props.isMock) {\n      this.startImageSearch(this.state.queryText);\n    }\n  }\n\n  // onDialogClosed()\n  onDialogClosed() {\n    this.setState({iSelectedImageURL: null});\n  }\n\n  // onClickHome()\n  onClickHome() {\n    this.setState({\n      queryText: '',\n      imageURLs: []\n    });\n    this.props.history.push('/');\n  }\n\n  // onClickMyZutan()\n  onClickMyZutan() {\n    this.props.history.push('/myzutan');\n  }\n\n\t// addToFirestore()\n\tprivate addToFirestore(zutanObject: any): void {\n    // TODO: props?\n    const user = firebase.auth().currentUser; \n    if (user !== null) {\n      // TODO: error handling. async?\n      const db = firebase.firestore();\n      db.collection('users').doc(user.uid)\n        .collection('zutan').add(zutanObject);\n    }\n\t}\n\n\t// addToMockObjects()\n\tprivate addToMockObjects(zutanObject: any): void {\n    mockMyZutanObjects.push({\n      word: zutanObject.word,\n      imageURL: zutanObject.imageURL\n    });\n\t}\n\n  // startImageSearch()\n  async startImageSearch(query) {\n    const imageURLs = this.state.imageURLs;\n    const url = 'https://www.googleapis.com/customsearch/v1' +\n      '?key=' + GOOGLE_CUSTOM_SEARCH_API_KEY + \n      '&cx=' + GOOGLE_CUSTOM_SEARCH_ENGINE_ID + \n      '&num=' + 10 +\n      '&start=' + (imageURLs.length + 1) +\n      '&searchType=image' +\n      '&q=' + query;\n    // console.log(url);\n    const response = await fetch(url);\n    const json = await response.json();\n    // console.log(json);\n    let urls: ImageURL[] = [];\n    for (let i = 0; i < json.items.length; i++) {\n      const item = json.items[i];\n      urls.push(new ImageURL(\n        query, item.link, item.image.thumbnailLink)\n      );\n    }\n    this.setState({\n      imageURLs: imageURLs.concat(urls)\n    });\n  }\n\n  // addMockResult()\n  private addMockResult() {\n    const query = 'apple';\n    // queryText: \n    this.setState({queryText: query});\n    // searchResult:\n    const imageURLs = mockSearchResult.map((item) => {\n      return new ImageURL(\n        query, item.full, item.thumb);\n    });\n    this.setState({imageURLs: imageURLs});\n  }\n}\n\nexport default WordSearch;\n","// MyZutan.tsx\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\nimport withWidth from '@material-ui/core/withWidth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as firebase from 'firebase';\n\nimport {mockMyZutanObjects} from './mockData';\nimport AppBar from './AppBar';\n\n// MyZutanDiv\nconst MyZutanDiv = styled.div`\n  margin: 10px;\n`;\n// ProgressDiv\nconst ProgressDiv = styled.div`\n  width: 100%;\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n`;\n// WordImg\n// XXX: object-position\nconst WordImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  padding: 0 10px;\n  object-fit: contain;\n  object-position: 0 50%;\n`;\n// ASearchIcon\nconst ASearchIcon = styled(SearchIcon)`\n  position: absolute;\n  right: 5px;\n` as any;\n// ADeleteIcon\nconst ADeleteIcon = styled(DeleteIcon)`\n  position: absolute;\n  right: 5px;\n` as any;\n// AGridList\nconst AGridList = styled(GridList)`\n  flex-wrap: nowrap;\n` as any;\n\n// MyZutan\ninterface MyZutanState {\n  zutanObjects: any[];\n  anchorEl: HTMLElement | null;\n  isZutanObjectsReady: boolean;\n}\nclass MyZutan extends Component<any, MyZutanState> {\n\n  // MyZutan\n  constructor(props) {\n    super(props);\n    this.state = {\n      zutanObjects: [],\n      isZutanObjectsReady: false,\n      anchorEl: null\n    }\n    this.onMenuClosed = this.onMenuClosed.bind(this);\n    this.onShowMenuClicked = this.onShowMenuClicked.bind(this);\n    this.onWeblioClicked = this.onWeblioClicked.bind(this);\n    this.onClickHome = this.onClickHome.bind(this);\n    this.onClickMyZutan = this.onClickMyZutan.bind(this);\n  }\n\n  // componentDidMount()\n  componentDidMount() {\n    if (this.props.isMock) {\n      this.loadZutanMockObjects();\n    } else {\n      this.loadZutanObjects();\n    }\n  }\n\n  // render()\n  render() {\n    if (!this.state.isZutanObjectsReady) {\n      return (\n        <div>\n          <AppBar\n            onClickHome={this.onClickHome}\n            onClickMyZutan={this.onClickMyZutan} />\n          <ProgressDiv>\n            <CircularProgress disableShrink />\n          </ProgressDiv>\n        </div>\n      );\n    } else {\n      // words\n      let words: string[] = [];\n      let word2urls = {};\n      this.state.zutanObjects.forEach((obj) => {\n        if (word2urls.hasOwnProperty(obj.word)) {\n          word2urls[obj.word].push(obj.imageURL);\n        } else {\n          word2urls[obj.word] = [obj.imageURL];\n          words.push(obj.word);\n        }\n      })\n      words.sort();\n      const width = this.props.width;\n      let cols;\n      switch (width) {\n        case 'xs':\n          cols = 1;\n          break;\n        case 'sm':\n          cols = 3;\n          break;\n        default:\n          cols = 4;\n          break;\n      }\n      const {anchorEl} = this.state;\n      const bShow = Boolean(anchorEl);\n      //\n      return (\n        <div>\n          <AppBar\n            onClickHome={this.onClickHome}\n            onClickMyZutan={this.onClickMyZutan} />\n          <MyZutanDiv>\n            <GridList cols={cols} cellHeight={300} spacing={16}> { words.map((word, i) =>\n              <GridListTile key={word}>\n                <Card raised>\n                  <CardHeader\n                    avatar={\n                      <Avatar aria-label=\"Word\">\n                        {word[0] && word[0].toUpperCase()}\n                      </Avatar>\n                    }\n                    action={\n                      <div>\n                        <IconButton\n                          onClick={this.onShowMenuClicked}>\n                          <MoreVertIcon />\n                        </IconButton>\n                        <MenuList>\n                          <Menu\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                              vertical: 'top',\n                              horizontal: 'right',\n                            }}\n                            transformOrigin={{\n                              vertical: 'top',\n                              horizontal: 'right',\n                            }}\n                            open={bShow}\n                            onClose={this.onMenuClosed}\n                          >\n                            <MenuItem onClick={() => {\n                              this.onWeblioClicked(word)\n                            }}>\n                              <ListItemIcon>\n                                <ASearchIcon />\n                              </ListItemIcon>\n                              <ListItemText primary=\"Weblio\" />\n                            </MenuItem>\n                            <MenuItem>\n                              <ListItemIcon>\n                                <ADeleteIcon />\n                              </ListItemIcon>\n                              <ListItemText primary=\"Delete (TODO)\" />\n                            </MenuItem>\n                          </Menu>\n                        </MenuList>\n                      </div>\n                    }\n                    title={word}\n                  />\n                  <CardContent>\n                    <AGridList cols={1.2}>\n                      {word2urls[word].map(url => (\n                        <GridListTile key={url}>\n                          <WordImg src={url} alt={word} />\n                        </GridListTile>\n                      ))}\n                    </AGridList>\n                  </CardContent>\n                </Card>\n              </GridListTile> )}\n            </GridList>\n          </MyZutanDiv>\n        </div>\n      );\n    }\n  }\n\n  // loadZutanObjects()\n  private loadZutanObjects(): void {\n    // TODO: props?\n    const user = firebase.auth().currentUser; \n    if (user !== null) {\n      const zutan = firebase.firestore()\n        .collection('users').doc(user.uid)\n        .collection('zutan');\n      zutan.get().then((snapshot) => {\n        let objs: any[] = []\n        snapshot.forEach((doc) => {\n          let data = doc.data()\n          objs.push({\n            word: data.word,\n            imageURL: data.imageURL\n          });\n        })\n        this.setState({\n          zutanObjects: objs,\n          isZutanObjectsReady: true\n        });\n      });\n    }\n  }\n  \n  // loadZutanMockObjects()\n  private loadZutanMockObjects(): void {\n    this.setState({\n      zutanObjects: mockMyZutanObjects,\n      isZutanObjectsReady: true\n    });\n  }\n\n  // onClickHome()\n  private onClickHome() {\n    this.props.history.push('/');\n  }\n\n  // onClickMyZutan()\n  private onClickMyZutan() {\n    this.props.history.push('/myzutan');\n  }\n\n  // onMenuClosed()\n  private onMenuClosed(): void {\n    this.setState({ anchorEl: null });\n  }\n\n  // onShowMenuClicked()\n  // TODO: any -> MouseEvent<HTMLElement> ??\n  private onShowMenuClicked(evt: any): void {\n    this.setState({ anchorEl: evt.currentTarget });\n  }\n\n  // onWeblioClicked()\n  private onWeblioClicked(word: string): void {\n    window.open('https://ejje.weblio.jp/content/' + word);\n    this.onMenuClosed();\n  }\n}\n\nexport default withWidth()(MyZutan);\n","// App.tsx\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport {create} from 'jss';\nimport {createGenerateClassName, jssPreset} from '@material-ui/core/styles';\nimport styled from 'styled-components'\nimport * as firebase from 'firebase';\nimport SignIn from './SignIn';\nimport WordSearch from './WordSearch';\nimport MyZutan from './MyZutan';\n\n// AppDiv\nconst AppDiv = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\n// App\ninterface AppState {\n  isSignedIn: boolean;\n}\nclass App extends Component<any, AppState> {\n\n  // App()\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false\n    }\n  }\n\n  // render()\n  render() {\n    const isMock = this.props.isMock;\n    const signInNeeded = isMock ?  false : !this.state.isSignedIn;\n    // material-ui\n    const generateClassName = createGenerateClassName({\n      // XXX: Without this, the style of <Grid> in SearchResultRow \n      //      will break in production build.\n      // # cleaner fix needed\n      dangerouslyUseGlobalCSS: true\n    });\n    const jss = create({\n      ...jssPreset(),\n      insertionPoint: document.getElementById('jss-insertion-point')!\n    });\n    // AppMain\n    const AppMain = (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route exact path=\"/\" render={({history}) =>\n            <WordSearch\n              history={history}\n              isMock={isMock} />}\n          />\n          <Route path=\"/myzutan\" render={({history}) =>\n            <MyZutan\n              history={history}\n              isMock={isMock} />}\n          />\n        </div>\n      </Router>\n    );\n    return (\n      <JssProvider jss={jss} generateClassName={generateClassName}>\n        <AppDiv>\n          {signInNeeded ?  <SignIn /> : AppMain}\n        </AppDiv>\n      </JssProvider>\n    );\n  }\n\n  // componentDidMount()\n  componentDidMount() {\n    if (!this.props.isMock) {\n      this.addFirebaseAuthListener();\n    }\n  }\n\n  // addFirebaseAuthListener()\n  addFirebaseAuthListener() {\n    firebase.auth().onAuthStateChanged((user) => {\n      //console.log('onAuthStateChanged:', user);\n      if (user) {\n        this.setState({isSignedIn: true});\n      } else {\n        this.setState({isSignedIn: false});\n      }\n    });\n  }\n}\n\nexport default App;\n","// index.tsx\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as firebase from 'firebase';\nimport './index.css';\nimport App from './App';\nimport {GOOGLE_FIREBASE_API_KEY} from './apikeys';\n\nconst firebaseConfig = {\n  apiKey: GOOGLE_FIREBASE_API_KEY,\n  authDomain: 'zu-tan.firebaseapp.com',\n  projectId: 'zu-tan'\n};\nrequire(\"firebase/firestore\");\nlet isMock = false;\nconsole.log('process.env.REACT_APP_MOCK: ' + process.env.REACT_APP_MOCK);\nconsole.log('process.env.PUBLIC_URL: ' + process.env.PUBLIC_URL);\nif (process.env.REACT_APP_MOCK) {\n  isMock = true;\n}\nif (!isMock) {\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({\n    timestampsInSnapshots: true\n  });\n}\nReactDOM.render(<App isMock={isMock} />, document.getElementById('root'));\n","// apikeys.tsx\n\nexport const GOOGLE_FIREBASE_API_KEY = \n  'AIzaSyCr403V4WFUSNUp0oXOLxsJGpDxOl-DwrI';\n\nexport const GOOGLE_CUSTOM_SEARCH_API_KEY =\n  'AIzaSyDJ3dMiO_6lqfYEXF9urIMnHVbWqgPDS2A';\n\nexport const GOOGLE_CUSTOM_SEARCH_ENGINE_ID =\n  '006472317582770626127:ifrtdfazlis';\n"],"sourceRoot":""}